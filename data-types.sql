--------------------------------------------------------------------------------------------------------------------DATA TYPES
DECLARE 
    NAME VARCHAR2(25);
    SURNAME VARCHAR2(25);
    SALARY NUMBER(7);
    SSN CHAR(10);
    DOB DATE;
BEGIN 
    DBMS_OUTPUT.PUT_LINE('Compiled declarations successfully');
END;

-----------------------------------------------------------------------------------------------------------------SETTING VALUE
DECLARE 
    --CONSTANT VARIABLES
    MIN_SALARY  CONSTANT NUMBER(7) := 12000; -- CONSTANT NUMBER CANNOT BE CHANGED AND WE DECLARE CONSTANT VARIABLE ON THE TOP 
    MAX_SALARY CONSTANT NUMBER(12) := 100000;

    --DECLARE VARIABLES    
    SALARY NUMBER(7) := 12000;
    SALARY_2 NUMBER(7) DEFAULT 12000;
    BOOL_VALUE BOOLEAN := FALSE;
    SALARY_3 NUMBER(7) NOT NULL := 10;
    NAME VARCHAR2(15) := 'Samir';
    SURNAME VARCHAR2(15) NOT NULL := 'Samirov';
    SSN CHAR(10) := '111-22-333';
BEGIN 
    --SHOW THE RESULT
    DBMS_OUTPUT.PUT_LINE('SALARY:' || SALARY);
    DBMS_OUTPUT.PUT_LINE('MIN-SALARY:' || MIN_SALARY);
    DBMS_OUTPUT.PUT_LINE('MAX-SALARY:' || MAX_SALARY);
    DBMS_OUTPUT.PUT_LINE('SALARY 2:' || SALARY_2);
    DBMS_OUTPUT.PUT_LINE('NAME:' || NAME);
    DBMS_OUTPUT.PUT_LINE('SURNAME:' || SURNAME);
    DBMS_OUTPUT.PUT_LINE('SSN:' || SSN);
END;


------------------------------------------------------------------------------------------------------COMPLEX DATA TYPES
--%TYPE
DECLARE 
    -- X_NAME DATA TYPES IS THE SAME AS HR.EMPLOYEES.FIRST_NAME COLUMN'S DATA TYPES    
    X_NAME HR.EMPLOYEES.FIRST_NAME%TYPE;
    X_SURNAME HR.EMPLOYEES.LAST_NAME%TYPE;

BEGIN 
    --RETRIEVE DATA FROM EMPLOYEES TABLE
    SELECT FIRST_NAME , LAST_NAME
    INTO X_NAME , X_SURNAME
    FROM HR.EMPLOYEES
    WHERE EMPLOYEE_ID = 105;

    --DISPLAY THE RESULT
    DBMS_OUTPUT.put_line('FULLNAME:' || X_NAME || ' ' || X_SURNAME);
END;

--%ROWTYPE
DECLARE 
    
    --DECLARE VARIABLES
    EMP HR.EMPLOYEES%ROWTYPE;
BEGIN
    --FILL THE FIELDS
    EMP.FIRST_NAME := 'SAMIR';
    EMP.LAST_NAME := 'SAMIROV';
    EMP.SALARY := 1250;
    
    --DISPLAY FIELDS
    DBMS_OUTPUT.PUT_LINE('FULLNAME:' || EMP.FIRST_NAME || ' ' || EMP.LAST_NAME);
    DBMS_OUTPUT.PUT_LINE('SALARY:' || EMP.SALARY);
END;

--OTHER EXAMPLE
DECLARE 
    X_EMP EMPLOYEES%ROWTYPE;
BEGIN
    --RETRIEVE DATA FROM HR.EMPLOYEES
    SELECT FIRST_NAME , LAST_NAME , SALARY 
    INTO X_EMP.FIRST_NAME , X_EMP.LAST_NAME , X_EMP.SALARY 
    FROM EMPLOYEES 
    WHERE EMPLOYEE_ID = 104;
    
    --DISPLAY THE RESULT
    DBMS_OUTPUT.PUT_LINE('EMLOYEE:' || X_EMP.FIRST_NAME || ' ' || X_EMP.LAST_NAME || ' salary is ' || X_EMP.SALARY);    
END;


----DECLARING COMPLEX TABLES
DECLARE 
    TYPE EMP_ARRAY
    IS TABLE OF HR.EMPLOYEES.EMPLOYEE_ID%TYPE
    INDEX BY SIMPLE_INTEGER;
    
    MANAGER_LIST  EMP_ARRAY;
    WORKER_LIST   EMP_ARRAY;
BEGIN 
    
    --RETRIEVE FIRST MANAGER
    SELECT EMPLOYEE_ID
    INTO MANAGER_LIST(1)
    FROM HR.EMPLOYEES
    WHERE EMPLOYEE_ID IS NOT NULL 
    AND ROWNUM <= 1;
    
    --RETRIEVE SECOND MANAGER
    SELECT EMPLOYEE_ID
    INTO MANAGER_LIST(2)
    FROM HR.EMPLOYEES
    WHERE EMPLOYEE_ID IS NOT NULL 
    AND ROWNUM <= 1
    AND MANAGER_LIST(1) <> EMPLOYEE_ID;
    
    --RETRIEVE FIRST WORKER
    SELECT EMPLOYEE_ID 
    INTO WORKER_LIST(1)
    FROM HR.EMPLOYEES
    WHERE SALARY IS NOT NULL
    AND ROWNUM <=1 
    AND EMPLOYEE_ID NOT IN (MANAGER_LIST(1) , MANAGER_LIST(2));
    
    
    --DISPLAY THE RESULTS
    DBMS_OUTPUT.PUT_LINE('MANAGER:' || MANAGER_LIST(1) || ' , ' || MANAGER_LIST(2));
    DBMS_OUTPUT.PUT_LINE('WORKER:' || WORKER_LIST(1) );
END;

--DECLARING COMPLEX RECORDS
DECLARE 
    TYPE EMP_RECORD
    IS RECORD ( ID           EMPLOYEES.EMPLOYEE_ID%TYPE,
                NAME         EMPLOYEES.FIRST_NAME%TYPE, 
                SURNAME      EMPLOYEES.LAST_NAME%TYPE
                );
                
    MANAGER_RECORD EMP_RECORD;            
BEGIN 
    --RETRIEVE FIRST EMPLOYEE          
    SELECT EMPLOYEE_ID , FIRST_NAME , LAST_NAME
    INTO MANAGER_RECORD
    FROM EMPLOYEES
    WHERE ROWNUM <=1;

    --DISPLAY THE RESULT
    DBMS_OUTPUT.PUT_LINE('MANAGER ID: ' || MANAGER_RECORD.ID);
    DBMS_OUTPUT.PUT_LINE('MANAGER NAME: ' || MANAGER_RECORD.NAME);
    DBMS_OUTPUT.PUT_LINE('MANAGER SURNAME: ' || MANAGER_RECORD.SURNAME);
END;

